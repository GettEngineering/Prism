#!/usr/bin/env ruby

###########################################
# apply_android_stems.rb                  #
# May 15th, 2019                          #
#                                         #
# @freak4pc | shai.mishali@gett.com       #
#                                         #
# This script takes pre-provided colors   #
# and resource stem-files and injects     #
# them between pre-configured boundary    #
# comments in relevant target files.      #
###########################################

require_relative "lib/arguments"
include Arguments

args = Arguments.parse(ARGV)
required_flags = [:"colors-stem", :"styles-stem", :"colors-file", :"styles-file"]

if required_flags.any? { |k| !args.key?(k) } then
    abort("Please set file paths using --colors-stem, --styles-stem, --colors-file and --styles-file")
end

for flag in required_flags
    file = args[flag]
    if !File.exists?(file) then
        abort("--#{flag} file doesn't exist at provided path: #{file}")
    end
end

colors_path = args[:"colors-file"]
styles_path = args[:"styles-file"]

colors_stem = File.read(args[:"colors-stem"])
styles_stem = File.read(args[:"styles-stem"])
colors_file = File.read(colors_path)
styles_file = File.read(styles_path)

matching_expression = /^(\s{4})<!-- START\: Generated by Prism Design System \| https:\/\/github.com\/gtforge\/prism -->\n(.*?)<!-- END\: Generated by Prism Design System \| https:\/\/github.com\/gtforge\/prism -->$/m

final_colors = colors_file.gsub(matching_expression, colors_stem)
final_styles = styles_file.gsub(matching_expression, styles_stem)

File.write(colors_path, final_colors)
File.write(styles_path, final_styles)